{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts","jsdom (ignored)","jsdom/lib/jsdom/living/generated/utils (ignored)","jsdom/lib/jsdom/utils (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAuD;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGCVjC,oJAA8B,KAC1B,qaAWwB,YADpB;;wBAAqB;MACrB;;wBAAmB;MAXvB,iwBAWwB,mDAVpB,mBAAqB,gBAIrB,qBAAW,EADX,qBAAY,EAEZ,sBAAsB,EACtB,sBAAwB,EACxB,sBAA6B,EAC7B,sBAAuB,EAPvB,8BAA6B,EAC7B,qBAAmB,EAHvB,YAWwB,EAVpB,SAAqB,EAIrB,SAAW,EADX,SAAY,EAEZ,SAAsB,EACtB,SAAwB,EACxB,SAA6B,EAC7B,SAAuB,EAPvB,SAA6B,EAC7B,SAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACG3B;AAAA;AAAO,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,aAAa,CAAC;QACtB,kBAAa,GAAG,2GAA2G,CAAC;IAM9H,CAAC;IAJC,IAAI,CAAC,MAAM;IACX,CAAC;IACD,MAAM;IACN,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGD;AAAA;AAAO,MAAM,SAAS;CAAI;;;;;;;;;;;;;AClB1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXpC,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"editor-placement\"> \r\n    <image-drawing\r\n        [src]=\"imageLocation\"\r\n        outputMimeType=\"'image/jpeg'\"\r\n        outputQuality=\"0.8\"\r\n        height=\"300\"\r\n        width=\"400\"\r\n        forceSizeCanvas=\"true\"\r\n        enableRemoveImage=\"true\"\r\n        enableLoadAnotherImage=\"true\"\r\n        showCancelButton=\"true\"\r\n        (save)=\"save($event)\"\r\n        (cancel)=\"cancel()\">\r\n    </image-drawing>\r\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'imageEditor';\n  imageLocation = 'http://www.auto-power-girl.com/high-resolution-wallpapers/audi-a3-cabriolet/audi-a3-cabriolet-2008-14.jpg';\n\n  save($event) {\n  }\n  cancel() {\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ImageDrawingModule } from 'ngx-image-drawing';\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ImageDrawingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}